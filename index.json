[{"content":"What A small webshop with username/password authentication to crack.\nDifficulty: Easy\nFlag0 Hint0: Something looks out of place with checkout spoiler Let\u0026rsquo;s fire up Burp, set Scope, turn off intercept and just walk through the application. This will create a Site map on Target tab.\nI\u0026rsquo;ve added both images to the cart and examined the checkout request.\nOn the Checkout page we can see \u0026ldquo;Payments temporarily disabled\u0026rdquo;.\nHint1: It\u0026rsquo;s always nice to get free stuff spoiler Cart value is passed to the server as URL encoded string. We can use Burp Inspector\u0026rsquo;s Decode feature to read it as JSON.\n[[0, {\u0026#34;logo\u0026#34;: \u0026#34;kitten.jpg\u0026#34;, \u0026#34;price\u0026#34;: 8.95, \u0026#34;name\u0026#34;: \u0026#34;Kitten\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;8\\\u0026#34;x10\\\u0026#34; color glossy photograph of a kitten.\u0026#34;}]] How about changing the price to 0.00? We can now turn Burp\u0026rsquo;s intercept on and hit Check Out again.\nNow forward the edited request and grab the free stuff plus the first FLAG.\nFlag1 Hint0: There must be a way to administer the app spoiler It is common to have an admin page, even for small sites. They also tend to share common names, like /admin.php.\nTo access admin pages, users must authenticate themselves, using pages like /login.php.\nHint1: Tools may help you find the entrypoint spoiler Sure. Let\u0026rsquo;s check what other pages are there. For this, I used gobuster with a command:\ngobuster dir -u https://20b754ee126051b8cd51afc718af76db.ctf.hacker101.com/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -z -t 100 -u \u0026lt;URL\u0026gt;\n-w \u0026lt;/path/to/wordlist-file\u0026gt; (start with a smaller list for low-hanging fruits)\n-t \u0026lt;threads\u0026gt; (default is 10)\n-z (to turn off the annoying \u0026ldquo;Progress\u0026rdquo; messages and show only hits)\nGobuster repo and full description for dir mode here .\nCheck the first result (note that the results are folders): Hint2: Tools are also great for finding credentials spoiler To see how the page responds, I shoot admin / password credentials:\nYou can see, the error handling gives us too much info about what\u0026rsquo;s wrong here (\u0026ldquo;Invalid username\u0026rdquo;). Better practice is to show \u0026ldquo;Invalid username or password\u0026rdquo;, as the attacker has to brute force all combinations of usernames and passwords.\nIn our case, we have to find a correct username first, then we can go for the valid password.\nI\u0026rsquo;ll brute force username with Hydra , using a wordlist for usernames from SecLists .\nhydra -L ~/repo/SecLists/Usernames/Names/names.txt -p \u0026#34;password\u0026#34; 20b754ee126051b8cd51afc718af76db.ctf.hacker101.com https-post-form \u0026#34;/login:username=^USER^\u0026amp;password=^PASS^:Invalid username\u0026#34; We\u0026rsquo;be got the username. Let\u0026rsquo;s go for the password. I\u0026rsquo;ll use the same wordlist.\nhydra -l aimil -P ~/repo/SecLists/Usernames/Names/names.txt 20b754ee126051b8cd51afc718af76db.ctf.hacker101.com https-post-form \u0026#34;/login:username=^USER^\u0026amp;password=^PASS^:Invalid password\u0026#34; We can use the credentials on /login. It will reveal the Edit feature below the images and show us the second FLAG.\nFlag2 Hint0: Always test every input spoiler Now that we are able to edit the product\u0026rsquo;s parameters, let\u0026rsquo;s try some basic XSS on the input fields. I\u0026rsquo;ll use numbers in alert messages to see which attack was successful.\nInternal Server Error.. OK, let\u0026rsquo;s try them one-by-one, starting with Name.\nSaved the changes, back to Home page. The pop-up message says that Name field is vulnerable to XSS.\nRestore Name to Kitten and add payload to Description. Save.\nBack to Home page. Our XSS on Description field has also worked.\nRemove payload from Description and add to Price.\nAfter saving, the Internal Server Error is back. At least, we know which field has caused it.\nBut, where\u0026rsquo;s my FLAG?\nHint1: Bugs don\u0026rsquo;t always appear in a place where the data is entered spoiler Let\u0026rsquo;s put the payload back to Name field, hit Save and head to Home page. Add a Kitten to the Cart.\nThe FLAG is included in the Shopping Cart.\nTakeaway(s) Look what parameters are passed with the form Web login hack can take some time on a VM, relax ","permalink":"https://d0rksec.github.io/playground/h101/petshop_pro/","summary":"Small webshop with login form to crack","title":"Hacker101 - Petshop Pro"},{"content":"What This is a small PHP site with private/public posts.\nDifficulty: Easy\nFlag0 Hint0: The person with username \u0026quot;user\u0026quot; has a very easy password spoiler Check 500-worst-passwords.txt in danielmiessler\u0026#39;s SecLists and the second password will give you the first FLAG.\nNo brute forcing needed.\nSign in on /index.php?page=sign_in.php and use the credentials user and password.\nFlag1 Hint0: Try viewing your own post and then see if you can change the ID spoiler Open My profile.\nCheck the address bar, what is id=c? It is our user ID. Let\u0026rsquo;s play with that.\nBingo, id=b shows us admin user\u0026rsquo;s profile with a private blog post on page /index.php?page=view.php\u0026amp;id=2\nLet\u0026rsquo;s open it and collect a FLAG.\nFlag2 Hint0: You should definitely use \u0026quot;Inspect Element\u0026quot; on the form when creating a new post spoiler Click on Write a new post link to open page /index.php?page=create.php.\nCheck the source of the page with the form. Notice the hidden input with name=\u0026quot;user_id\u0026quot; value=\u0026quot;2\u0026quot; hard-coded fields.\nLet\u0026rsquo;s see how our form works in Burp!\nFirst test is to create a public post:\nParameters passed to create.php are:\ntitle=test1title\u0026amp;body=test1content\u0026amp;user_id=2\nCreate a private post too:\nParameters are now:\ntitle=test2title\u0026amp;body=test2content\u0026amp;private=on\u0026amp;user_id=2\nIn Burp, we can simply modify POST request parameters before sending to the server. Let\u0026rsquo;s create another post we will tamper a bit:)\nFor profile ID, the page used letters. User ID for user was c, which is the third letter. User ID of admin was b, which is the second.\nIn the request, we see numbers as user_id. 2 is the third number (0, 1, 2), so how about trying user_id=1?\nEdit user_id=2 to user_id=1 in the intercepted POST request and hit Forward.\nJust another FLAG!\nFlag3 Hint0: 189 * 5 spoiler So far, our known pages are:\nFunctional pages:\naccount.php create.php delete.php edit.php profile.php sign_in.php sign_out.php view.php Posts can be read on view.php\u0026amp;id=1..6\nCommon question: What else is there?!\nRemember, posts are created on pages indexed by numbers. The hint contains numbers.\nAt this point to speculate that we will find our FLAG on /index.php?page=view.php\u0026amp;id=945 might be the quick solution.\nI\u0026rsquo;ve struggled ~2 hours with ffuf to FUZZ id parameter in the request, without luck. I\u0026rsquo;ll try that later.\nThere may be a bunch of wordlists containing numbers only, but, to save time, let\u0026rsquo;s create our own containing numbers from 0 to 1000. Find more here or here .\n#!/usr/bin/python3 df=open(\u0026#39;numbers.txt\u0026#39;,\u0026#39;w\u0026#39;) for i in range(0,1000): df.write(str(i)) df.write(\u0026#39;\\n\u0026#39;) df.close() Open a text editor, insert above and save as numbers.py.\nAdd permission for execution with\nchmod +x numbers.py and run with\npython3 numbers.py I beg your pardon for a dirty little python script above, not the most elegant solution. But, once my supervisor said: \u0026ldquo;a working program is better today, than a perfect one tomorrow\u0026rdquo; :)\nI gave a shot for Burp Intruder, just for the sake of it..\nEnable Intercept on Proxy tab and refresh page with the first post. Right click on the request and select Send to Intruder.\nOn the Positions tab, clear all payload positions with Clear ยง on the right and select only the value of id parameter (here: 1). Click Add ยง.\nBurp Suite Community Edition is free, but Intruder is extremely slow due to throttling. So, I\u0026rsquo;ve created a shorter wordlist, containing only [1,2,3,4,5,6,7,8,9,945].\nSwitch to Payloads tab and load a wordlist under Payload Options [Simple list] using the Load\u0026hellip; button.\nWe\u0026rsquo;re all set, hit Start attack on the top right corner.\nGreat, at least that worked. Check Request 1 where Payload is 1.\nA bit ugly, how about switching to Render tab? Much better.\nIf you check the results, you\u0026rsquo;ll see that all the pages with Post not found response will have the same 1500 length.\nOkay, get the FLAG by checking Request 10 with Payload 945:\nFlag4 Hint0: You can edit your own posts, what about someone else\u0026rsquo;s? spoiler After you logon with user / password credentials from Flag1, you can see two posts on the Home page.\nOne of them can be edited , the other\u0026rsquo;s author is admin. Open the Hello everyone! post for view.\nThe id=3 at the end of the URL identifies the post. Get back to Home page and open the other post by admin.\nIt has id=1. Let\u0026rsquo;s open the post Hello everyone! for editing and change the id from 3 to 1 (and hit enter):\nChange something and then Save post.\nA new FLAG:\nFlag5 Hint0: The cookie allows you to stay signed in. Can you figure out how they work so you can sign in to user with ID 1? spoiler We already know from Flag1, that we can view admin\u0026rsquo;s profile by changing id=c to id=b.\nLogged in as user, open developer tools, switch to Application tab and select the website\u0026rsquo;s cookies on the left, under Storage.\nOur user has c81e728d9d4c2f636f067f89cc14862c as id. It\u0026rsquo;s a hash, we need to decrypt it. I\u0026rsquo;ve used this page for the task, ther result is 2. Remember Flag2? This is our user_id.\nWe can edit cookie values with the browser\u0026rsquo;s developer tools, but first we neew the md5 hash value of 1. Our friend is the terminal.\necho -n 1|md5sum Sign out from the page. Cookies will be flushed.\nRight-click on the area where cookies would be listed and select Add new\nUse id as Name and c4ca4238a0b923820dcc509a6f75849b as value.\nClick Home and you can see your new FLAG, logged in as admin.\nWe can also use Burp to intercept the requests and tamper cookies before forwarding it.\nFlag6 Hint0: Deleting a post seems to take an ID that is not a number. Can you figure out what it is? spoiler Deleting a post will pass the post id to /index.php?page=delete.php page as a hashed value.\nWe can guess from the same post\u0026rsquo;s edit link in the above line (/index.php?page=edit.php\u0026amp;id=4), that the hashed value will be close to 4, but to be sure, I\u0026rsquo;ve checked it on this page :\nLet\u0026rsquo;s delete Admin\u0026rsquo;s Hello world post, which has an id=1. Using the command from previous Flag:\necho -n 1|md5sum Our URL will be:\n/index.php?page=delete.php\u0026amp;id=c4ca4238a0b923820dcc509a6f75849b\n\u0026hellip; resulting the last FLAG!\nTakeaway(s) Look for easy to guess passwords Check if you can tamper with input parameters Broken authentication (can access other user\u0026rsquo;s private content) Use automated scanning to check missed pages (due to high page id or other weird stuff) Weak encryption (md5) used in cookie for authentication id to obfuscate link ","permalink":"https://d0rksec.github.io/playground/h101/postbook/","summary":"Small PHP site with private/public posts to play with","title":"Hacker101 - Postbook"},{"content":"What A small CMS, with very basic functions.\nDifficulty: Easy\nFlag0 Hint0: Try creating a new page spoiler Hit the link Create a new page. Fill out title and content. Click Save button to create the page. Hint1: How are pages indexed? spoiler Pages are indexed with ascending numbers in a form of /page/$ (like *.ctf.hacker101.com/page/1, /2, etc.) Hint2: Look at the sequence of IDs spoiler Testing is /page/1.\nMarkdown Test is /page/2.\nThe page we have created starts at */page/11.\nWhat is between page/2 and page/11?\nHint3: If the front door doesn\u0026rsquo;t open, try the window spoiler Edit the page ID in the address bar and open page/3, page/4, etc.\nYou\u0026rsquo;ll find that /page/5 is Forbidden.\nHint4: In what ways can you retrieve page contents? spoiler When you open /page/1 (Testing) or /page/2 (Markdown Test), or on the page you\u0026rsquo;ve created, see that link Edit this page? Open any pages above for editing and check the URL! It is /page/edit/$.\nChange the ID to 5 (/page/edit/5) and collect the first FLAG. Flag1 Hint0: Make sure you tamper with every input spoiler What inputs do we have on this site (make a habit of manually looking around on a site)?\nThere are form inputs on Edit Page (/page/edit/$) and on Create Page (/page/create):\nTitle: \u0026lt;input type=\u0026quot;text\u0026quot;\u0026gt;\nText: \u0026lt;textarea name=\u0026quot;body\u0026quot;\u0026gt;\nHint1: Have you tested for the usual culprits? XSS, SQL injection, path injection spoiler XSS has worked only on Title field (see FLAG2). There is a comment under the textarea: \u0026ldquo;Markdown is supported, but scripts are not\u0026rdquo;.\nFor SQL injection, see last hint.\nNo luck with path injection.\nHint2: Bugs often occur when an input should always be one type and turns out to be another spoiler Title field expects text, javascript worked here (see FLAG2).\nBody textarea accepts only markdown, javascript filtered there.\nURL expects only numbers as page ID.\nHint3: Remember, form submissions aren\u0026rsquo;t the only inputs that come from browsers spoiler \u0026hellip; Also, there is the address bar in the browser.\nPut a single apostrophe (') after the page\u0026rsquo;s URL in the address bar, like /page/edit/1' for the FLAG.\nThis simulates the case when a page ID (in this case \u0026ldquo;1\u0026rdquo;) is processed by a backend script and used in an SQL query without sanitizing it first. See more on SQL injection (a very basic injection would be something like /page/edit/1' or 1=1; --), but here, to get the flag, a single apostrophe is enough. I\u0026rsquo;ve tried some basic injection after it without luck.\nFlag2 Hint0: Sometimes a given input will affect more than one page spoiler The first input I\u0026rsquo;ve tried has resulted in a FLAG.\nOpen a page for editing, then insert \u0026lt;script\u0026gt;alert('1')\u0026lt;/script\u0026gt; into the Title field:\nCreate the page.\nHint1: The bug you are looking for doesn\u0026rsquo;t exist in the most obvious place this input is shown spoiler You are inserting the XSS on some page\u0026rsquo;s Title field. If you reload the page, nothing happens. Try navigating to the Home page :)\nHome page lists the page titles in an unordered list. List items use Title field values without satitation. This is where our payload kicks in.\nFlag3 Hint0: Script tags are great, but what other options do you have? spoiler Using markdown, you can insert URLs, buttons, images on the page.\nIf you load Markdown Test page (/page/2), there is an example for an image (broken) and a button element.\nEdit the page.\nLook up on HTML/JS reference, what inline options you have for a button tag. I\u0026rsquo;ve inserted onclick=\u0026quot;alert('3')\u0026quot; here.\nSave the page, XSS would just work fine. But where\u0026rsquo;s my FLAG?\nCheck the source of the page to get your last FLAG!\nI\u0026rsquo;ve also tried XSS on the image element, following this link , but couldn\u0026rsquo;t manage to make it work.\nTakeaway(s) Manually try all available functions of the site, understand how they works Whatch for low-hanging fruits, like unsanitized user inputs (XSS, SQLi) Look for \u0026ldquo;missing\u0026rdquo; pages ","permalink":"https://d0rksec.github.io/playground/h101/micro-cms_v1/","summary":"A small CMS with very basic functions","title":"Hacker101 - Micro CMS_v1"},{"content":"What A simple, one-page site.\nDifficulty: Trivial\nFlag0 Hint0: Take a look at the source for the page spoiler Hit F12 and check Elements tab. Check all sources of the page, even \u0026lt;head\u0026gt; and \u0026lt;style\u0026gt;. Hint1: Does anything seem out of the ordinary? spoiler There is a background-image added to the body element in \u0026lt;style\u0026gt;, but we can\u0026rsquo;t see it rendered. Hint2: The page looks really plain spoiler Is the image even loading? Is it available (Status 200)? Hint3: What is that image? spoiler Open the image on a new tab. If you download the image and open it with Chrome, you\u0026rsquo;ll only see a white square. If you try to open it with an image viewer, it will throw an error.\nLet\u0026rsquo;s create a copy from the image and change the file extension from .png to .txt. Now you can open the file with a simple text editor to see your flag.\nTakeaway(s) Always check html, css, js sources for mistakes, forgotten comments and other weird stuff ","permalink":"https://d0rksec.github.io/playground/h101/get-started/","summary":"Trivial - A little something to get you started","title":"Hacker101 - Get Started"},{"content":"Hugo \u0026lt;3 GitHub Pages With Hugo, I was able to quickly deploy a functional website with plenty of themes to select from. Hugo is somewhere between you build up a site from HTML+CSS+JS by hand and a fully hosted site, where your only job is to edit content in some online Markdown editor. With this setup, you can manually change theme settings or the structure of your content, play with git - if you want. If you\u0026rsquo;re satisfied with the look of your site, you can just push content to it.\nThe pages you would need the most to start with David Saltares - Easily deploy your Hugo site to Github Pages Official Hugo Quickstart Short list of steps Creat d0rksec.github.io repo (public, with readme.md)\nCreat d0rksec.github.io-dev repo (private, with readme.md)\nClone d0rksec.github.io-dev repo to computer (for example, into /stuff)\ngit clone https://github.com/d0rksec/d0rksec.github.io-dev.git Populate /stuff/d0rksec.github.io-dev/ with a blank site (following steps on local computer):\nInstall Hugo (.deb worked well, had permission issues with snap package)\nCreate a blank site\nhugo new site /stuff/d0rksec.github.io-dev/ --force Generate a public/private key pair for publishing\nssh-keygen -t rsa -b 4096 -C \u0026#34;\u0026lt;email\u0026gt;\u0026#34; -f publish_key -P \u0026#34;\u0026#34; On GitHub, add deploy key for d0rksec.github.io and paste contents of publish_key.pub\nOn GitHub, add new secret to d0rksec.github.io-dev as ACTIONS_DEPLOY_KEY and paste contents of publish_key\nCreate /stuff/d0rksec.github.io-dev/.gitignore\nInstall theme (PaperMod) as submodule\ncd /stuff/d0rksec.github.io-dev git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive Copy favicon files into /stuff/d0rksec.github.io-dev/static/\nCreate /stuff/d0rksec.github.io-dev/content/archives.md\nCreate /stuff/d0rksec.github.io-dev/content/search.md\nCreate /stuff/d0rksec.github.io-dev/.github/workflows/deploy.yml\nAfter hugo server -D, check https://localhost:1313 how the site looks like\nIn /stuff/d0rksec.github.io-dev/\ngit add --all git commit -m \u0026#34;site created\u0026#34; git push -u origin main Cross fingers and check https://github.com/d0rksec/d0rksec.github.io/actions Useful links https://gohugo.io/getting-started/quick-start/ https://saltares.com/easily-deploy-your-hugo-site-to-github-pages/ https://github.com/adityatelange/hugo-PaperMod/wiki/Installation https://github.com/peaceiris/actions-gh-pages https://muhannad0.github.io/post/using-github-actions-to-deploy-my-blog/ https://medium.com/@asishrs/automate-your-github-pages-deployment-using-hugo-and-actions-518b959a51f9 ","permalink":"https://d0rksec.github.io/2022/04/hugo-101-deploy-to-github-pages/","summary":"How I created this site","title":"Hugo 101 - Deploy to GitHub Pages"}]